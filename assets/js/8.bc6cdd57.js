(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{237:function(t,e,a){t.exports=a.p+"assets/img/circle.54773cf5.png"},238:function(t,e,a){t.exports=a.p+"assets/img/circle_1.8cd19a90.png"},239:function(t,e,a){t.exports=a.p+"assets/img/circle_2.b3c8d5e7.png"},240:function(t,e,a){t.exports=a.p+"assets/img/circle_3.e48ed1b0.png"},241:function(t,e,a){t.exports=a.p+"assets/img/circle_4.7d39beb6.png"},242:function(t,e,a){t.exports=a.p+"assets/img/circle_5.2b1ad1bf.png"},243:function(t,e,a){t.exports=a.p+"assets/img/circle_6.6ebd77d7.png"},244:function(t,e,a){t.exports=a.p+"assets/img/circle_7.96950041.png"},363:function(t,e,a){"use strict";a.r(e);var s=a(2),r=Object(s.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"circle-ci"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#circle-ci","aria-hidden":"true"}},[t._v("#")]),t._v(" Circle CI")]),t._v(" "),s("blockquote",[s("p",[t._v("本篇目为 Circle CI 搭建指南，以静态博客为例，覆盖构建、发布及通知流程。")])]),t._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("Circle CI 是一个用 Clojure 语言开发的基于容器运行的持续集成应用，适用于 Github 及 Bitbucket 仓库，并提供一个 Linux 容器免费使用，因其配置简单，工作流强大，便于集成测试及部署，成为 Github 当下最受欢迎的 CI / CD 工具（ React、Vue 及 Angular 官方都在使用其作为自动化构建工具）。")]),t._v(" "),s("h2",{attrs:{id:"说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说明","aria-hidden":"true"}},[t._v("#")]),t._v(" 说明")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://circleci.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Circle CI"),s("OutboundLink")],1),t._v(" 是容器化的 CI / CD 工具，使用前需要了解 "),s("a",{attrs:{href:"https://damo-web.github.io/docs/server/docker.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker"),s("OutboundLink")],1),t._v(" 前置知识，通过简单配置根目录下 "),s("code",[t._v(".circleci/config.yml")]),t._v("文件即可运行 CI / CD 服务。")]),t._v(" "),s("h2",{attrs:{id:"流程图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程图","aria-hidden":"true"}},[t._v("#")]),t._v(" 流程图")]),t._v(" "),s("p",[s("img",{attrs:{src:a(237),alt:""}})]),t._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("p",[t._v("可以通过 "),s("a",{attrs:{href:"https://circleci.com/signup/",target:"_blank",rel:"noopener noreferrer"}},[t._v("circleci | signup"),s("OutboundLink")],1),t._v(" 或 "),s("a",{attrs:{href:"https://github.com/marketplace/circleci",target:"_blank",rel:"noopener noreferrer"}},[t._v("github | marketplace"),s("OutboundLink")],1),t._v("来进行授权安装。")]),t._v(" "),s("h2",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("授权完成后进入 "),s("a",{attrs:{href:"https://circleci.com/dashboard",target:"_blank",rel:"noopener noreferrer"}},[t._v("circleci | dashboard"),s("OutboundLink")],1),t._v("，选择对应的组织")])]),t._v(" "),s("li",[s("p",[t._v("激活仓库")]),t._v(" "),s("p",[s("img",{attrs:{src:a(238),alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("添加构建运行时的私密信息")]),t._v(" "),s("p",[s("img",{attrs:{src:a(239),alt:""}})]),t._v(" "),s("p",[t._v("USERNAME 为 Github 用户名，EMAIL 为 Github 注册邮件，GH_REF 为 Github 仓库，GH_TOKEN 为 Github Token")]),t._v(" "),s("p",[t._v("关于 Github Token 即 Github Personal Access Token，具体生成步骤可参阅： "),s("a",{attrs:{href:"https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line#creating-a-token",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github | creating-a-personal-access-token"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[t._v("仓库根目录下配置 "),s("code",[t._v(".circleci/config.yml")]),t._v("文件")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 版本号，这里推荐使用版本2，版本1已不再维护")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("working_directory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ~/repo\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("docker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" circleci/node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# checkout source code")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" checkout\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" install\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n              yarn cache clean\n              yarn install")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n              yarn build")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n              git init\n              git config user.name ${USERNAME}\n              git config user.email ${EMAIL}\n              git add -A\n              git commit -m "deploy"\n              git push -f https://${GH_TOKEN}@${GH_REF} master:gh-pages')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义 workflows")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workflows")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 过滤器，只有 master 分支才执行")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("filters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n                "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ignore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" gh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pages\n")])])]),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("倘若仓库中采用了多个 CI 工具，其他 CI 工具的 commit 会触发 Circle CI 服务中 gh-pages 分支的构建操作，此时可以在 gh-pages 分支内追加 "),s("code",[t._v(".circleci/config.yml")]),t._v("文件并配置不构建来阻止，也可以在 git commit 中追加 "),s("code",[t._v("[ci skip]")]),t._v(" 或 "),s("code",[t._v("[skip ci]")]),t._v("来避免")])])]),t._v(" "),s("li",[s("p",[t._v("构建项目")]),t._v(" "),s("p",[s("img",{attrs:{src:a(240),alt:""}})]),t._v(" "),s("p",[t._v("点击构建时，Circle CI 会利用 Github 授权，创建 "),s("code",[t._v("Webhooks")]),t._v(" 及 "),s("code",[t._v("Deploy keys")]),t._v("，如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(241),alt:""}})]),t._v(" "),s("p",[s("img",{attrs:{src:a(242),alt:""}})]),t._v(" "),s("p",[t._v("其中，Webhooks 用于监测事件向 Circle CI 服务器通信；Deploy keys 用于 Github 仓库授权，用于查看及推送")])]),t._v(" "),s("li",[s("p",[t._v("配置 Slack 通知")]),t._v(" "),s("p",[t._v("首先，在 Slack 网站 App Directory 页面，搜索 Circle CI 并获取 Webhook URL：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(243),alt:""}})]),t._v(" "),s("p",[t._v("其次，在项目中配置 Webhook URL：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(244),alt:""}})]),t._v(" "),s("p",[t._v("至此构建完成时，便会发送构建相关信息通知到 Slack 对应的频道。")])])]),t._v(" "),s("h2",{attrs:{id:"参考链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考链接","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),s("ul",[s("li",[s("p",[s("a",{attrs:{href:"https://circleci.com/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CircleCI"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://medium.com/static-void-academy/easy-peasy-ci-cd-w-circleci-282bc85ddcf5",target:"_blank",rel:"noopener noreferrer"}},[t._v("Easy-Peasy CI/CD with CircleCI"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://medium.com/better-programming/how-to-setup-continuous-integration-ci-with-react-circleci-and-github-e0efd5040b03",target:"_blank",rel:"noopener noreferrer"}},[t._v("How To Setup Continuous Integration With React, CircleCI, and GitHub"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://circleci.com/docs/2.0/skip-build/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Skipping a Build"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://discuss.circleci.com/t/adding-circle-skip-to-commit-message-to-skip/2778",target:"_blank",rel:"noopener noreferrer"}},[t._v("commit message to skip ci"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://help.github.com/en/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent",target:"_blank",rel:"noopener noreferrer"}},[t._v("Generating a new SSH key and adding it to the ssh-agent"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://circleci.com/docs/2.0/deployment-integrations/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Configuring Deploys"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://medium.com/@evenchange4/%E4%BD%BF%E7%94%A8-circleci-2-0-workflows-%E6%8C%91%E6%88%B0%E4%B8%89%E5%80%8D%E9%80%9F-9691e54b0ef0",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用 CircleCI 2.0 Workflows 挑戰三倍速"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://halu.lu/post/auto-deploy-with-circleci/",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用 CircleCI 自动部署博客"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://hddhyq.github.io/2019/01/31/CircleCI%E5%AE%9E%E8%B7%B5gh-pages%E9%83%A8%E7%BD%B2/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CircleCI 实践 gh-pages 部署"),s("OutboundLink")],1)])]),t._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://juejin.im/post/5c41de1b51882525ea108983",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何使用 CircleCI for GitHub Pages 持续部署"),s("OutboundLink")],1)])])])])},[],!1,null,null,null);e.default=r.exports}}]);