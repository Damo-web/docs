(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{265:function(t,s,n){t.exports=n.p+"assets/img/jenkins_1.1ccdc5c8.png"},266:function(t,s,n){t.exports=n.p+"assets/img/jenkins_2.53959353.png"},267:function(t,s,n){t.exports=n.p+"assets/img/jenkins_3.69864297.png"},268:function(t,s,n){t.exports=n.p+"assets/img/jenkins_4.c36ec9a2.png"},269:function(t,s,n){t.exports=n.p+"assets/img/jenkins_5.be0b111b.png"},270:function(t,s,n){t.exports=n.p+"assets/img/jenkins_6.2df4e441.png"},271:function(t,s,n){t.exports=n.p+"assets/img/jenkins_7.55430139.png"},272:function(t,s,n){t.exports=n.p+"assets/img/jenkins_8.1b502a1e.png"},273:function(t,s,n){t.exports=n.p+"assets/img/jenkins_9.e13ea70c.png"},274:function(t,s,n){t.exports=n.p+"assets/img/jenkins_10.64926a72.png"},275:function(t,s,n){t.exports=n.p+"assets/img/jenkins_11.4a6b2ebe.png"},276:function(t,s,n){t.exports=n.p+"assets/img/jenkins_12.e5d8b066.png"},277:function(t,s,n){t.exports=n.p+"assets/img/jenkins_13.2488db17.png"},278:function(t,s,n){t.exports=n.p+"assets/img/jenkins_14.65be7c8e.png"},279:function(t,s,n){t.exports=n.p+"assets/img/jenkins_15.007e0d3d.png"},280:function(t,s,n){t.exports=n.p+"assets/img/jenkins_16.329f4f5f.png"},281:function(t,s,n){t.exports=n.p+"assets/img/jenkins_17.7f4e559b.png"},282:function(t,s,n){t.exports=n.p+"assets/img/jenkins_18.7e12d2aa.png"},283:function(t,s,n){t.exports=n.p+"assets/img/jenkins_19.19b41d9a.png"},369:function(t,s,n){"use strict";n.r(s);var a=n(2),e=Object(a.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"jenkins-ci"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jenkins-ci","aria-hidden":"true"}},[t._v("#")]),t._v(" Jenkins CI")]),t._v(" "),a("blockquote",[a("p",[t._v("本篇目为 Jenkins CI 搭建指南，以静态博客为例，覆盖构建、发布及通知流程。")])]),t._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("Jenkins 无疑是当下最广泛使用的开源 CI 工具，其丰富的插件系统、权限系统为企业的持续集成提供了可靠的拓展性和丰富的定制性。")]),t._v(" "),a("h2",{attrs:{id:"说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#说明","aria-hidden":"true"}},[t._v("#")]),t._v(" 说明")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://jenkins.io/download/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jenkins"),a("OutboundLink")],1),t._v(" 部署方式有多种，推荐采用 Docker 或 Linux 环境来进行安装，不推荐 Mac OS 直接安装（ 修改默认配置繁琐 ）。")]),t._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("本篇以阿里云 CentOS 系统为例，演示了 Jenkins 整个安装过程。")]),t._v(" "),a("p",[t._v("关于阿里云的使用可参阅："),a("a",{attrs:{href:"https://damo-web.github.io/docs/server/",target:"_blank",rel:"noopener noreferrer"}},[t._v("阿里云ECS使用指南"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Jenkins 依赖 Java 和 Git ，如果系统未自带，执行下述命令：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 git")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 java")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" java\n")])])]),a("p",[t._v("Jenkins 安装所需命令：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" jenkins\n\n")])])]),a("p",[t._v("启动 Jenkins：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" jenkins start\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示如下状态即是启动成功，打开浏览器，输入阿里云服务器公网地址的 8080 端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 需要在阿里云平台安全组规则中把端口暴露出来，才可以访问云服务器对应端口")]),t._v("\nStarting jenkins "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("via systemctl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":                          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("  OK  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h2",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("为了避免权限所引发的问题，以下命令建议均以 root 权限进行运行。")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("配置云服务器安全组规则")]),t._v(" "),a("p",[t._v("可按如下顺序进入安全组：")]),t._v(" "),a("blockquote",[a("p",[t._v("实例列表 => 更多 => 网络和安全组 => 安全组配置 => 配置规则 => 添加安全组规则")])]),t._v(" "),a("p",[a("img",{attrs:{src:n(265),alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("配置 Jenkins 管理员账号")]),t._v(" "),a("p",[t._v("浏览器访问 Jenkins 地址 http://ali-server-ip:8080，出现如下页面：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(266),alt:""}})]),t._v(" "),a("p",[t._v("执行如下命令，把初始的管理员密码复制进去，并安装推荐插件，创建管理员账户后，就可以进入 Jenkins 首页")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /var/lib/jenkins/secrets/initialAdminPassword\n")])])])]),t._v(" "),a("li",[a("p",[t._v("配置 Jenkins 任务")]),t._v(" "),a("p",[t._v("点击 Jenkins 首页面板中新建任务即可建立项目任务")]),t._v(" "),a("p",[a("img",{attrs:{src:n(267),alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("配置前端项目构建插件")]),t._v(" "),a("p",[t._v("构建前端项目需要配置 Node 环境，代码也需要从 Github 拉取并发布，因此需要在插件管理中安装 \t"),a("code",[t._v("NodeJS Plugin")]),t._v(" 、 "),a("code",[t._v("\tGitHub Integration Plugin")]),t._v("、"),a("code",[t._v("Publish Over SSH")]),t._v("三个插件。")]),t._v(" "),a("p",[t._v("可按如下顺序安装插件：")]),t._v(" "),a("blockquote",[a("p",[t._v("系统管理 => 插件管理 => 可选插件 => 过滤 => 勾选插件 => 直接安装")])]),t._v(" "),a("p",[a("img",{attrs:{src:n(268),alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("配置 Node 环境")]),t._v(" "),a("p",[t._v("首先需要配置 Node 版本及别名：")]),t._v(" "),a("blockquote",[a("p",[t._v("系统管理 => 全局工具配置 => NodeJS => NodeJS安装")])]),t._v(" "),a("p",[a("img",{attrs:{src:n(269),alt:""}})]),t._v(" "),a("p",[t._v("其次，在任务面板中进入项目配置页，配置如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(270),alt:""}})]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("倘若系统中已安装 Node环境，也可以在 Shell 脚本里加入"),a("code",[t._v("export PATH=/usr/local/bin")]),t._v(" 命令来启动 Node")])])]),t._v(" "),a("li",[a("p",[t._v("配置 Github Webhook")]),t._v(" "),a("p",[t._v("Github 服务器相关配置主要利用 Github Webhook 来触发 Jenkins 任务的构建。")]),t._v(" "),a("p",[t._v("首先需要生成 Github Personal Access Token，细节可参阅："),a("a",{attrs:{href:"https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line#creating-a-token",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github | creating-a-personal-access-token"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("其次配置包含 Github Personal Access Token 的 Jenkins 凭据以供 Github 服务器使用：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(271),alt:""}})]),t._v(" "),a("p",[t._v("再者，补充相关服务器信息，选择刚创建的凭据进行连接测试，如下图所示，即为 Github 服务器配置成功：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(272),alt:""}})]),t._v(" "),a("p",[t._v("Github 服务器配置成功后，进入项目配置页，如下图配置即完成 Github Webhook 的全部配置工作：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(273),alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("配置 SSH 秘钥")]),t._v(" "),a("p",[t._v("通常利用 ssh-keygen 来生成秘钥对：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行命令，下述结果仅为执行参考")]),t._v("\nssh-keygen\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行结果")]),t._v("\nGenerating public/private rsa key pair.\nEnter "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" to save the key "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("/root/.ssh/id_rsa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# passphrase 为 key 的密码，默认设置空 ，表示不需要密码")]),t._v("\nEnter passphrase "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empty "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" no passphrase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": \nEnter same passphrase again: \nYour identification has been saved "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /root/.ssh/id_rsa.\nYour public key has been saved "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /root/.ssh/id_rsa.pub.\nThe key fingerprint is:\nSHA256:YwhPC9gxq6OPmVJ7XYiKI257bSPPnfpdBc root@snowball\nThe key's randomart image is:\n+---"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("RSA "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("----+\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   o*o           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  oo."),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(".          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("+ o.o"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("+o.        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" +o. ++oS.E      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(".o + "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(".oo+. "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("+"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(".          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n+----"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("SHA256"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("-----+   \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看私钥")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /root/.ssh/id_rsa\n-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAs1rxWQZzK+pOLbXY7vdLMoMfA85QVavrwuR06RksLImlFiXj\nlDLhmYZUUijspp1Zw775+9VQxldejiCsL3mhzWSJPJ9wO5TJi1CXLn5QsEjY39dC\ns5SEVq1EhqnVN0fjQqHaJn8GOOfy5bvzyTmV8WgO8Pl4CeR5vuuQbRYFDP+rjQnH\nzLpeq73FiWASMRT5vIrZ1Rk92JoGN7TtBdI3ipP+O1kMimO0sATB9Rruww+lpuuZ\n63jbHjPfmY24czMHbtbkpNjyDZNyvC7Mi2RNuIwcDkz4LQOJuWni\n-----END RSA PRIVATE KEY-----\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看公钥")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" id_rsa.pub\nssh-rsa AAAAB3NzaC1yc2EAA2gQNDCo99NsjZzrkYYRZ4Uohrgt8LPXxTF0Zr3 root@snowball\n")])])]),a("p",[t._v("在 Jenkins 下新建全局凭据，添加私钥，如下图所示：")]),t._v(" "),a("blockquote",[a("p",[t._v("凭据 => 系统 => 全局凭据")])]),t._v(" "),a("p",[a("img",{attrs:{src:n(274),alt:""}})]),t._v(" "),a("p",[t._v("在 Github 仓库下新建 Deploy keys ，添加公钥，如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(275),alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("配置 Git 仓库")]),t._v(" "),a("p",[t._v("当配置好 Github Webhook 和 SSH 秘钥，就可以进入项目配置页，配置 Git 仓库来拉取及推送代码（ 推荐采用 SSH ）：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(276),alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("配置 Shell 命令")]),t._v(" "),a("p",[t._v("进入项目配置页，配置 Shell 环境变量及命令，用来执行构建任务：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(277),alt:""}})]),t._v(" "),a("p",[t._v("至此，Jenkins 已可以通过源代码 push 事件实现自动化部署静态博客。")]),t._v(" "),a("p",[t._v("当然，可以对部署配置做一些简单优化，比如添加 Github 链接、丢弃旧构建、删除工作区域缓存等，如下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(278),alt:""}})]),t._v(" "),a("p",[a("img",{attrs:{src:n(279),alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("配置 Slack 通知")]),t._v(" "),a("p",[t._v("Jenkins 项目自动构建完成后，需要提供相应的反馈信息，以便确定项目是否构建成功，一般情况下，可以通过邮件系统来通知。")]),t._v(" "),a("p",[t._v("在团队中，项目的构建信息需要与团队成员共享，以便及时了解项目的运行状态。当然，邮件系统也能满足共享功能，但归类功能比较薄弱，此处引入 "),a("a",{attrs:{href:"https://slack.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Slack"),a("OutboundLink")],1),t._v(" 来共享项目运行状态。")]),t._v(" "),a("p",[t._v("首先，在 Slack 网站 App Directory 页面，搜索 Jenkins CI 并获取 Slack Token：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(280),alt:""}})]),t._v(" "),a("p",[t._v("在 Jenkins 下新建全局凭据，添加 Slack Token ，如下图所示：")]),t._v(" "),a("blockquote",[a("p",[t._v("凭据 => 系统 => 全局凭据")])]),t._v(" "),a("p",[a("img",{attrs:{src:n(281),alt:""}})]),t._v(" "),a("p",[t._v("Jenkins 启用 Slack 通知机制，需要在插件管理中安装"),a("code",[t._v("Slack Notification Plugin")]),t._v("，并如下配置：")]),t._v(" "),a("img",{staticClass:"zoomable",attrs:{src:n(282),width:"100%"}}),t._v(" "),a("p",[t._v("当然也可以添加自定义通知消息，如下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:n(283),alt:""}})]),t._v(" "),a("p",[t._v("至此构建完成时，便会发送构建相关信息通知到 Slack 对应的频道。")])])]),t._v(" "),a("h2",{attrs:{id:"参考链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考链接","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://medium.com/appgambit/setup-jenkins-on-centos-with-docker-for-selenium-b7dba07b9ffa",target:"_blank",rel:"noopener noreferrer"}},[t._v("Setup Jenkins on CentOS"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://medium.com/appgambit/integrating-jenkins-with-slack-notifications-4f14d1ce9c7a",target:"_blank",rel:"noopener noreferrer"}},[t._v("Integrating Jenkins with Slack Notifications"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.zhihu.com/question/21402411",target:"_blank",rel:"noopener noreferrer"}},[t._v("github提示Permission denied (publickey)，如何才能解决？"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://git-scm.com/book/zh/v1/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5",target:"_blank",rel:"noopener noreferrer"}},[t._v("服务器上的 Git - 生成 SSH 公钥"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://stackoverflow.com/questions/40495711/wedriverio-jenkins-npm-command-not-found-error",target:"_blank",rel:"noopener noreferrer"}},[t._v("jenkins - npm command not found error"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://docs.bitnami.com/azure/how-to/create-ci-pipeline/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Create A Continuous Integration Pipeline With GitLab And Jenkins"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://medium.com/@marc_best/trigger-a-jenkins-build-from-a-github-push-b922468ef1ae",target:"_blank",rel:"noopener noreferrer"}},[t._v("Triggering a Jenkins build from a push to Github"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://juejin.im/post/5ad1980e6fb9a028c42ea1be",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jenkins打造强大的前端自动化工作流"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://juejin.im/post/5c1a3282f265da61764ad51a",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jenkins 自动化部署实践"),a("OutboundLink")],1)])])])])},[],!1,null,null,null);s.default=e.exports}}]);